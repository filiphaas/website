<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://fragaria.cz/feed.xml" rel="self" type="application/atom+xml"/><link href="https://fragaria.cz/" rel="alternate" type="text/html"/><updated>2021-04-12T14:38:16+00:00</updated><id>https://fragaria.cz/feed.xml</id><title type="html">Fragaria.cz</title><subtitle>Based in Prague, Czech Republic, we love building high-quality, reliable and scalable web applications without compromises. Having more than 10 years of experience in the field, our team is built upon senior-level experts. Think backends, frontends, SPAs and mobile apps; we know what it takes to do it absolutely right. </subtitle><entry xml:lang="en"><title type="html">My UK startup experience</title><link href="https://fragaria.cz/blog/2021/02/01/my-uk-startup-experience/" rel="alternate" type="text/html" title="My UK startup experience"/><published>2021-02-01T15:00:00+00:00</published><updated>2021-02-01T15:00:00+00:00</updated><id>https://fragaria.cz/blog/2021/02/01/my-uk-startup-experience</id><content type="html" xml:base="https://fragaria.cz/blog/2021/02/01/my-uk-startup-experience/">&lt;p&gt;Few years ago I stumbled upon an opportunity to work for a London based startup as a QA engineer. I was supposed to work remotely with occasional business trips to London. I didn’t have to think about it twice, the offer was very attractive. I liked the company and the chance to travel abroad.&lt;/p&gt; &lt;p&gt;Digital Moneybox Limited runs an IOS and Android mobile app called &lt;a href=&quot;https://www.moneyboxapp.com/&quot;&gt;Moneybox&lt;/a&gt;, which allows UK residents to easily invest their savings in a variety of financial products such as pensions and ISAs (Individual Savings Account). The company has been established in 2015 and has been achieving great success since. It has been nominated for a number of UK consumer awards and won the Best Money App 2019 (The Times Consumer Investment Awards).&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/moneybox2_zayjwo&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/moneybox2_zayjwo 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/moneybox2_zayjwo 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/moneybox2_zayjwo 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/moneybox2_zayjwo 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/moneybox2_zayjwo 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/moneybox2_zayjwo 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;Moneybox&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;I have been working remotely out of a coworking space in Brno and spent about a week in London each two or three months. The office was located in the very heart of London at South Bank, near the river Thames and about ten minutes from Blackfriers. I have never been in UK before, so I was enjoying every second of these trips and not just because I had all the expenses covered :D. I loved the food, the architecture and the vibrant atmosphere of the city center. On the other hand it was quite overwhelming, I was usually pretty worn out when I got back to my hotel.&lt;/p&gt; &lt;p&gt;My London based colleagues were great, representing a variety of different cultures and ethnicities. I would say only about sixty percent of them were actually british. Most of them were thrilled by the opportunity to work for Moneybox and infected by the company vision and recent success. It seemed like everyone was really enjoying their work, operations officers, analysts, software engineers and even us testers :). A lot of people were into fitness and healthy lifestyle in general. Occasional football, jogging or badminton during the day were encouraged by the owners.&lt;/p&gt; &lt;p&gt;I was originally hired as a technical tester and supposed to test the backend of a new transactional platform. Later on my duties extended to mobile apps and API testing. I spent most of the time working with tools such as Postman, Charles Proxy and MSSQL. My direct colleagues were frontend and backend software engineers, all of them were easy going and willing to go the extra mile just to explain everything.&lt;/p&gt; &lt;p&gt;I eventually left, because I wanted to move towards automation testing or even frontend development, but wasn’t given the opportunity. It was a great experience I will never forget though. Who knows, perhaps I will seek a job abroad again in the future, the world has a lot to offer.&lt;/p&gt;</content><author><name>Jan Březina</name></author><summary type="html">Few years ago I stumbled upon an opportunity to work for a London based startup as a QA engineer. I was supposed to work remotely with occasional business trips to London. I didn’t have to think about it twice, the offer was very attractive. I liked the company and the chance to travel abroad.</summary></entry><entry xml:lang="cs"><title type="html">Marketing mezi programátory? Pokus omyl s prvním produktem.</title><link href="https://fragaria.cz/blog/2020/11/15/marketing-mezi-programatory/" rel="alternate" type="text/html" title="Marketing mezi programátory? Pokus omyl s prvním produktem."/><published>2020-11-15T12:00:00+00:00</published><updated>2020-11-15T12:00:00+00:00</updated><id>https://fragaria.cz/blog/2020/11/15/marketing-mezi-programatory</id><content type="html" xml:base="https://fragaria.cz/blog/2020/11/15/marketing-mezi-programatory/">&lt;p&gt;V životě narazíte na různé klienty. Ti co nevědí co chtějí, ale včera bylo pozdě, ti co přesně vědí, jak to chtějí, nejradši by Vám poradili a spoustu dalších. Na toto téma koluje spousta vtipů, například ceník: hodina práce 500,-, hodina práce, kdy se klient dívá 800,-, hodina práce, kdy klient přichází s návrhy 1000,- .&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/KARMEN_3.1_c9u8o4&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/KARMEN_3.1_c9u8o4 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/KARMEN_3.1_c9u8o4 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/KARMEN_3.1_c9u8o4 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/KARMEN_3.1_c9u8o4 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/KARMEN_3.1_c9u8o4 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/KARMEN_3.1_c9u8o4 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;Karmen&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;Nebo třeba narazíte na klienty jakoukoliv sebepropagací nepolíbené i po 15 letech úspěšného působení na trhu. A co víc, klienty sebepropagací nepolíbené, kteří právě po letech vývoje software na zakázku vypustili do světa svůj první hardware produkt a nevědí co s tím.&lt;/p&gt; &lt;p&gt;Příběh je samozřejmě zcela smyšlený a podobnost s reálnými osobami či firmami je čistě náhodná. A proto tato hypotetická firma, říkejme ji třeba Jahoda, tady najme tuhle agenturu na tamto, tamhle zase jinou na tohle. Na dotaz, jestli hledají a potřebují sales nebo marketing dostaneme odpověď: a jaký je v tom rozdíl? A to se teprve zahříváme. Jakou máte strategii? Jaký je Váš klient? Kdo je cílová skupina? Heh, eh no ehm nevíme.&lt;/p&gt; &lt;p&gt;Marketing &amp;amp; Sales jsou stejně tak široké pojmy jako IT. Ale s jedním rozdílem. Zatímco IT je magické, nikdo tomu nerozumí, všichni na ajťáky koukají s otevřenou pusou a obchází je uctivým obloukem, marketingu a prodeji stejně jako fotbalu rozumí každý. Protože to není žádné umění, tahle reklama je blbá, tamta dobrá, easy-pízy. Zaplatím si reklamu na googlu a prodeje se pohrnou.&lt;/p&gt; &lt;p&gt;Zatímco v hospodě přesně vím, že tamten fotbalista hrál úplně na nic a tenhle rozhodčí to píská úplně blbě, je on snad úplně slepej?!, tak jakmile budu stát na hřišti, nejspíš přes svůj pivní břich nedoběhnu ani k prvnímu výkopu. A úplně stejně je to s marketingem, zatímco přesně vím, že tahle reklama je dobrá a tamta ne, jakmile dostanu přihrávku udělat skvělou reklamu, nejspíš narazím na to, že nevím jak. Je pravda, že vysoká škola není potřeba, ale je potřeba se učit stejně, jako chodit na tréninky ve fotbale.&lt;/p&gt; &lt;p&gt;Naštěstí jsou v Jahodě lidé uvědomělí, ajťáčtí odborníci a svojí práci opravdu rozumí a proto chápou, že dostat produkt na světlo svépomocí v pauzách na kafe mezi programováním a vývojem není cesta. A vědí to právě proto, že si to sami zkusili.&lt;/p&gt; &lt;p&gt;A proto jsme společně stanovili cíle a strategii na marketing a sales a našli jsme si cestu, jak jich dosáhnout. Co je totiž marketing? Vytvořit nezapomenutelnou reklamu, kterou každý bude znát? Prodat víc produktů? Vytvořit si komunitu zákazníků, kteří budou zvyšovat důvěryhodnost produktu? Cokoliv z toho, co si klient stanovil jako svůj cíl. Což je snadná definice, ale často je právě v tomhle obrovský problem. Klient neví. Znamená to, že musíme ten cíl nejdříve najít a vytvořit strategii k jeho dosažení. Musíme vědět, komu budeme prodávat, na jakých platformách naši zákazníci tráví čas a přes jaké nakupují, což se často liší. Jakou formou s nimi budeme komunikovat, jaký zvolíme tón a v neposlední řadě, jak změříme výsledky. A pokud jakýkoliv z kroků selže, pak jsme vynaložili úsilí a prostředky bez výsledku.&lt;/p&gt; &lt;p&gt;Pravda, není to jaderná fyzika, není to exaktní věda, je to subjektivní a je to obor hodně dynamický a otevřený diskuzi. Neznamená, to, že by se na tvorbě marketingu neměl podílet nikdo jiný než ten jediný povolaný. Naopak. Často ty nejlepší nápady vznikají z diskuze. A nemusíte tomu rozumět, někdy stačí mít jen názor, pokud to není ten jediný správný, jako ve fotbale. A to je na tom zajímavé.&lt;/p&gt; &lt;p&gt;Vždycky mě pobaví, když si uvědomím, že jsem se k marketingu dostala oklikou přes studium architektury. “Ten dům je ale hrozně ošklivej” nebo “hezkej”. “Vždyť bych to uměla nakreslit taky. A co vám na tom trvá tak dlouho?”. Odpovědi na tyto otázky jsou také marketing a smysluplnost produktu je důležitá. Proto pomáhám &lt;a href=&quot;https://karmen.tech&quot;&gt;Karmen&lt;/a&gt; se dostat na světlo a daří se nám to.&lt;/p&gt;</content><author><name>Romana Pourová</name></author><summary type="html">V životě narazíte na různé klienty. Ti co nevědí co chtějí, ale včera bylo pozdě, ti co přesně vědí, jak to chtějí, nejradši by Vám poradili a spoustu dalších. Na toto téma koluje spousta vtipů, například ceník: hodina práce 500,-, hodina práce, kdy se klient dívá 800,-, hodina práce, kdy klient přichází s návrhy 1000,- .</summary></entry><entry xml:lang="en"><title type="html">Moving on!</title><link href="https://fragaria.cz/blog/2020/03/26/moving-on/" rel="alternate" type="text/html" title="Moving on!"/><published>2020-03-26T12:00:00+00:00</published><updated>2020-03-26T12:00:00+00:00</updated><id>https://fragaria.cz/blog/2020/03/26/moving-on</id><content type="html" xml:base="https://fragaria.cz/blog/2020/03/26/moving-on/">&lt;p&gt;In every person’s career, there are times when you need to move on. And for me, it is now. I am leaving Fragaria at the end of March. Read on to learn the whats and whys and maybe my article will encourage &lt;strong&gt;you&lt;/strong&gt; to move on as well and become my replacement in Fragaria.&lt;/p&gt; &lt;p&gt;I’ll start with the negatives - or things that can improve - and end on a positive note. All of these are of course largely a matter of personal preference, so you might love what I don’t like and vice versa.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/leonard-cotte-N-fpGq1tqns-unsplash_vmmbu6&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/leonard-cotte-N-fpGq1tqns-unsplash_vmmbu6 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/leonard-cotte-N-fpGq1tqns-unsplash_vmmbu6 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/leonard-cotte-N-fpGq1tqns-unsplash_vmmbu6 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/leonard-cotte-N-fpGq1tqns-unsplash_vmmbu6 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/leonard-cotte-N-fpGq1tqns-unsplash_vmmbu6 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/leonard-cotte-N-fpGq1tqns-unsplash_vmmbu6 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;Photo by Léonard Cotte on Unsplash&lt;/figcaption&gt; &lt;/figure&gt; &lt;h2 id=&quot;the-ugly&quot;&gt;The ugly&lt;/h2&gt; &lt;p&gt;I have been with Fragaria for more than four years and that’s quite a long time. Since Fragaria has a relatively small headcount (around 20 people), you will necessarily work with the same people all the time. And if you don’t click with them, there is just no way around that. And yes - I know this works both ways, I’m not the easiest person to work with.&lt;/p&gt; &lt;p&gt;Since the company is full of strong personalities with solid engineering opinions backed by a lot of experience, it is sometimes hard to reach an agreement. When the heads cool down though, everybody can enjoy a laugh together and move on.&lt;/p&gt; &lt;p&gt;So no hard feelings and I’m sure I will occasionally pop up for the Monday beer night.&lt;/p&gt; &lt;h2 id=&quot;the-bad&quot;&gt;The bad&lt;/h2&gt; &lt;p&gt;Fragaria is mostly doing customer projects. You are able to touch a lot of technologies, explore new domains and even travel abroad from time to time. For me, the customer projects have been getting harder and harder, because the older I get, the more I want to work on something that I can be proud of, that I can stand for, that is sort of mine. And I was often missing that feeling with the customer projects.&lt;/p&gt; &lt;p&gt;So we started to work on &lt;a href=&quot;https://karmen.tech&quot;&gt;Karmen&lt;/a&gt; last year, our own, Fragaria-based project related to 3D printing. And all was fine in the beginning but it’s now taking a direction that I’m just not happy with. So it sadly starts to feel like a customer project for me.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;iframe width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube.com/embed/lhsvBzyhI54&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt; &lt;/figure&gt; &lt;p&gt;I’d like to point out one other thing in this section - and again, it is something that other people might perceive differently. The will to grow could be bigger. And don’t get me wrong - things can change in Fragaria if something is askew. But the overall direction is basically the same as it was four years ago. And that doesn’t cut it for me anymore. It looks like I finally got some ambition into me in my thirties.&lt;/p&gt; &lt;h2 id=&quot;the-good&quot;&gt;The good&lt;/h2&gt; &lt;p&gt;This just has to be said: The organization feels like a bunch of friends making some weird stuff with computers. Fragaria is definitely not a corporation. If you don’t like something, you can always talk about it and see if it can be improved. You don’t like the project anymore? No problem, it can be changed. You want to learn a technology? No problem, it can be probably applied to something we are already doing.&lt;/p&gt; &lt;p&gt;We also have a good experience with remote work - not everybody is a good fit for it, but it mostly works. So if you are not from Prague, that’s not an issue. At all. Just be ready for some off-beat jokes. And it works even if you are from Prague and are not feeling well, waiting for a package or taking care of your kids at home. Almost anything can be arranged. You just have to ask for it.&lt;/p&gt; &lt;p&gt;The company is a great fit for people who are just out of school. You can learn from experienced colleagues, you can get profficient in a language or a framework of your liking. You are able to explore, get comfortable and find out what you actually want to do.&lt;/p&gt; &lt;p&gt;And of course, the legendary annual retreats need to be mentioned here as well. The next one is in May, you should definitely not miss out this time.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/jackson-simmer-ZNHItG36UxE-unsplash_kzp44s&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/jackson-simmer-ZNHItG36UxE-unsplash_kzp44s 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/jackson-simmer-ZNHItG36UxE-unsplash_kzp44s 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/jackson-simmer-ZNHItG36UxE-unsplash_kzp44s 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/jackson-simmer-ZNHItG36UxE-unsplash_kzp44s 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/jackson-simmer-ZNHItG36UxE-unsplash_kzp44s 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/jackson-simmer-ZNHItG36UxE-unsplash_kzp44s 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;Photo by Jackson Simmer on Unsplash&lt;/figcaption&gt; &lt;/figure&gt; &lt;h2 id=&quot;the-future&quot;&gt;The future&lt;/h2&gt; &lt;p&gt;I always wanted to explore different directions in my career. I was initially supposed to start working at Fragaria as a graduate, but for several reasons, I ended up in a bank. And I am very grateful for that experience. It taught me a lot. After a few years, Fragaria called for help on a project and I gladly accepted the opportunity. And just as expected, I have learned a lot again.&lt;/p&gt; &lt;p&gt;Now it’s just time for me to move on again. I am going to work for one of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Unicorn_(finance)&quot;&gt;Silicon Valley unicorns&lt;/a&gt; and I am really looking forward to it. It’s a totally different size of the company, totally different work culture, totally different environment.&lt;/p&gt; &lt;p&gt;At this point of my life, it’s an opportunity for me to grow.&lt;/p&gt;</content><author><name>Jirka Chadima</name></author><summary type="html">In every person’s career, there are times when you need to move on. And for me, it is now. I am leaving Fragaria at the end of March. Read on to learn the whats and whys and maybe my article will encourage you to move on as well and become my replacement in Fragaria.</summary></entry><entry xml:lang="cz"><title type="html">Když 1Gbps nestačí… Jak na 10G intranet</title><link href="https://fragaria.cz/blog/2020/03/08/kdyz-1g-nestaci/" rel="alternate" type="text/html" title="Když 1Gbps nestačí… Jak na 10G intranet"/><published>2020-03-08T07:00:00+00:00</published><updated>2020-03-08T07:00:00+00:00</updated><id>https://fragaria.cz/blog/2020/03/08/kdyz-1g-nestaci</id><content type="html" xml:base="https://fragaria.cz/blog/2020/03/08/kdyz-1g-nestaci/">&lt;p&gt;Když si dnes koupíte počítač, je tak nějak standardem, že v něm je 1G síťovka, ačkoliv se ještě pořád dají najít stroje, do kterých výrobce stále montuje pohých 100M. Ale s chabým stavem přípojek po většině republiky, které si o 100M mohou nechat jenom zdát a přístupu většiny ISP, kdy defaultně dodávají levné routery se 100M porty, nehrozí, že by si běžný uživatel všimnul rozdílu. Ale co když je 1G málo? A v jakých situacích vůbec může být málo? A proč bych měl vůbec utrácet za 10G síťové prvky?&lt;/p&gt; &lt;h2 id=&quot;víc-jak-giga-proč&quot;&gt;Víc jak giga. Proč?&lt;/h2&gt; &lt;p&gt;Pokud patříte do té malé skupinky lidí, kteří mají přístup k pořádné přípojce, důvod je jasný: screenshoty ze speedtestu a možnost vysmívat se kolegovi na optice, že v jeho speedtestu chybí jedna nebo dvě nuly.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile &quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/EPLbtv3WoAcCtnX_jt3j8q&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/EPLbtv3WoAcCtnX_jt3j8q 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/EPLbtv3WoAcCtnX_jt3j8q 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/EPLbtv3WoAcCtnX_jt3j8q 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/EPLbtv3WoAcCtnX_jt3j8q 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/EPLbtv3WoAcCtnX_jt3j8q 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/EPLbtv3WoAcCtnX_jt3j8q 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;/figure&gt; &lt;p&gt;Pokud výsledek výše pro vás není nic neobvyklého, pravděpodobně už máte dispozici rychlejší síť, nebo jí dokonce i spravujete - přecijen v českých podmínkách jsou koncové přípojky s rychlostí nad 1G velmi vzácné. V tom případě pro vás následující článek nejspíše nepřinese nic nového.&lt;/p&gt; &lt;p&gt;Pokud žijete na vesnici, tak vaše přípojka pravděpodobně nebude dosahovat závratných rychlostí. Buď jste připojeni vzduchem z (ne)dalekého města a internet pořádně funguje jenom když neprší. Nebo přípojku zajišťuje telefonní vedení z minulého století a internet k vám teče po dvou drátech, jejichž elektrické vlastnosti jsou srovnatelné s párem mokrých provázků. To ale ještě nutně nemusí znamenat, že 1G interface bude stačit.&lt;/p&gt; &lt;h2 id=&quot;home-sweet-home&quot;&gt;Home, sweet home.&lt;/h2&gt; &lt;p&gt;Kouzlo rychlých sítí zatím existuje hlavně lokálně. Koupili jste si úžasnou NASku pro uchování vašich záloh, rodinných filmů, obrazů linuxových distribucí a dalších dat náročných na úložiště? Pokud na obou koncích nejsou disky z doby kamenné, už jste pravděpodobně vyhodili 100M router od vašeho poskytovatele a nejspíš i narazili na limity 1G propojů.&lt;/p&gt; &lt;h2 id=&quot;a-kolik-teda-potřebuji&quot;&gt;A kolik teda potřebuji?&lt;/h2&gt; &lt;p&gt;Lepší pevný disk zvládá rychlosti okolo 150 MB/s. V případě SSD se bavíme o hodnotách nad 500 MB/s. Samotný disk je ale kvůli zálohování zpravidla nesmysl, a ukládání dat na různá RAID pole může rychlosti ještě dosti zvednout - 4 disky v RAID5 znamenají až trojnásobnou rychlost při čtení. Než začneme míchat jablka a hrušky, je nutno poznamenat, že zatímco při úložišti se zpravidla bavíme o bytech, v síti to jsou zase bity. Lepší NAS s vhodnými disky ve správné konfiguraci teoreticky zvládne posílat ven až 3600 Mbps, v případě SSD se dostáváme až na teoretických 12000 Mbps. A najednou jsou ty gigové rozvody hodně pozadu.&lt;/p&gt; &lt;h2 id=&quot;ale-zpátky-na-zem&quot;&gt;Ale zpátky na zem…&lt;/h2&gt; &lt;p&gt;3600 Mbps je opravdu hodně. Ale co s takovou rychlostí? Které zařízení to zvládne a k čemu to využije běžný uživatel?&lt;/p&gt; &lt;p&gt;Pokud na NASce máte videa, 4K stream potřebuje okolo 20 Mbps, takže i na gigové síti je zde stále velká rezerva. Rychlé připojení se vyplatí hlavně ve dvou případech - při velkém množství klientů a pro zkrácení čekání u velkých záloh. Při běžné práci na počítači se se svým průměrným NVMe SSD dostávám na rychlost zápisu okolo 700 MB/s (5600 Mbps), takže pro kopírování objemných dat už zde jsou znatelné rozdíly.&lt;/p&gt; &lt;p&gt;Využití se najde i při zálohování z více disků najednou, nebo při datově náročných operacích, například pro střih videa. Zvláště, pokud zpracováváme záznam z více kamer a třeba ještě ve 4K, potřebujeme velké a rychlé úložiště. Do běžného desktopu se vejde jen pár disků, takže vhodné řešení je mít data na velkém diskovém poli, ideálně s RAIDem pro zálohu. A pokud chceme využít plný potenciál takového řešení, je 10G propoj nutnost.&lt;/p&gt; &lt;p&gt;Při více klientech dává smysl mít 10G alespoň na cestě od NASky do posledního switche, a do klientských PC přivést jenom 1G. Varianta je to značně levnější a na velkých pracovištích může zlepšit user experience.&lt;/p&gt; &lt;h2 id=&quot;a-co-cena&quot;&gt;A co cena?&lt;/h2&gt; &lt;p&gt;Rozumný 1G switch se dá pořídit kolem tisícovky. Na rozvody stačí CAT5e kabely za 5 korun/metr a pokud náhodou není v počítači 1G síťová karta, do PCIe se dá pořídit už od pár stovek. S 10G sítí už je to trochu nákladnější… Logicky jsou zde větší požadavky na hardware, což je dobře vidět například na větší ceně NAS s 10G portem. Switch s několika 1G porty a dvojicí 10G portů pro uplink už vyjde nad 5 tisíc. Pokud budeme chtít mít všech 8 portů 10G, je už cena okolo 15 tisíc. S více porty ceny dále rostou. Síťová karta do počítače už je v řádu jednotek tisíc. Možnost, jak ušetřit na switchích a síťových kartách existuje, nakupujte použité. Například na eBayi se jich dá najít za rozumnou cenu hromada.&lt;/p&gt; &lt;p&gt;U těchto prvků se kromě známých RJ45 konektorů objevují také SFP sloty. Ceny obou řešení jsou si dosti podobné, nicméně v druhém případě je cena ještě navýšena o SFP moduly. Jeden případ za všechny by v případě PCIe karet mohly být například karty od Asusu - model XG-C100C s metalikou a XG-C100F s SFP šachtou.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile &quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/20200308_224536_v6r3ea&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/20200308_224536_v6r3ea 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/20200308_224536_v6r3ea 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/20200308_224536_v6r3ea 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/20200308_224536_v6r3ea 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/20200308_224536_v6r3ea 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/20200308_224536_v6r3ea 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;XG-C100F s optickým modulem&lt;/figcaption&gt; &lt;/figure&gt; &lt;figure class=&quot;figure content-block__cover--mobile &quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/20200308_223407_ty5kyk&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/20200308_223407_ty5kyk 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/20200308_223407_ty5kyk 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/20200308_223407_ty5kyk 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/20200308_223407_ty5kyk 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/20200308_223407_ty5kyk 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/20200308_223407_ty5kyk 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;SPF switch s optickými moduly a metalické switche&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;Ve většině případů je lepší pořídit prvky pro metaliku. Jenže ani ty nemusí nutně fungovat na aktuální infrastruktuře - většina rozvodů dnes zpravidla bývá z CAT5e kabeláže. Ačkoliv 1G internet po ní zvládá fungovat až na vzdálenosti 100m, u 10G tomu tak nebude. Na krátkých spojích do deseti metrů zpravidla problémy nebudou, u delších rozvodů už ale můžeme očekávat problémy. Spoj nemusí mít 10G link, někdy se naváže pouze 5G, 2.5G, nebo jenom 1G spoj, občas se link nemusí navázat vůbec.&lt;/p&gt; &lt;p&gt;10G síť vyžaduje CAT6A kabely, které stojí dvojnásobek a při předělávání rozvodů už je vhodné myslet dopředu a rovnou použít CAT7. Není to zase tak dávno, kdy nám stačily dial-up modemy a kam jsme se za tu dobu dostali. V případě prvků s SFP sloty máme větší flexibilitu v zapojení, ale za nějaké kompromisy. SFP moduly na sobě mohou mít buď metalický konektor, a nebo optický LC konektor, který sice nabízí větší vzdálenosti, jen nemusí vždy fungovat.&lt;/p&gt; &lt;p&gt;Optické 10G SFP moduly na eBayi najdete v cenovém rozmezí od několika stovek po několik tisíc korun, podle toho od jakého výrobce jsou. A různí výrobci v různých zařízeních podporují různé SFP moduly, a je zpravidla nutné si přečíst dokumentaci, než nějaký koupíte. Ještě obtížnější je to s optikou, která se dělí na single mode a multimode, které mezi sebou nejsou kompatibilní, a proto není od věci si před koupí nastudovat pár článků o tom, jak to vlastně funguje.&lt;/p&gt; &lt;p&gt;Hodně štěstí s nakupováním!&lt;/p&gt;</content><author><name>Adam Ježek</name></author><category term="network"/><category term="internet"/><category term="10G"/><summary type="html">Když si dnes koupíte počítač, je tak nějak standardem, že v něm je 1G síťovka, ačkoliv se ještě pořád dají najít stroje, do kterých výrobce stále montuje pohých 100M. Ale s chabým stavem přípojek po většině republiky, které si o 100M mohou nechat jenom zdát a přístupu většiny ISP, kdy defaultně dodávají levné routery se 100M porty, nehrozí, že by si běžný uživatel všimnul rozdílu. Ale co když je 1G málo? A v jakých situacích vůbec může být málo? A proč bych měl vůbec utrácet za 10G síťové prvky?</summary></entry><entry xml:lang="cz"><title type="html">Magenta - nechte počítače hrát</title><link href="https://fragaria.cz/blog/2019/10/11/magenta-nechte-pocitace-hrat/" rel="alternate" type="text/html" title="Magenta - nechte počítače hrát"/><published>2019-10-11T07:00:00+00:00</published><updated>2019-10-11T07:00:00+00:00</updated><id>https://fragaria.cz/blog/2019/10/11/magenta-nechte-pocitace-hrat</id><content type="html" xml:base="https://fragaria.cz/blog/2019/10/11/magenta-nechte-pocitace-hrat/">&lt;p&gt;Umělá inteligence je v poslední době oblíbené téma a její využití si pomalu nachází cestu do našich životů, ať už o tom víme či nikoliv. Umožňuje nám automatizovat úlohy, které nejsou úplně triviální na automatizaci, a proto předtím musely být prováděny lidmi. Pomocí ní můžeme analyzovat velká množství dat a na základě nich detekovat/předpovídat věci, které by byly nad lidské síly. V praxi jste se s ní setkali např ve vyhledávači Google, virtuální asistentce Siri, různých chatbotech nebo třeba jako oběť cíleného marketingu. Ne všechno z toho úplně vyvolává váš úžas, možná jste už ale slyšeli o jejím potenciálu ve zdravotnictví, kde by pomáhala doktorům v diagnostice nemocí, nebo autonomních vozidlech. Což zní velmi slibně a věřím, že se obojího dočkáme. Jeden z dalších směrů, kde se umělá inteligence rozvíjí, je umění. Umožňuje tvůrcům hledat nové nápady, používat jiné techniky atd. Rád bych vám představil jeden projekt, který se zajímá o použití umělé inteligence jako pomocného nástroje v rámci kreativního procesu, a to Magenta.&lt;/p&gt; &lt;h2 id=&quot;magenta&quot;&gt;Magenta&lt;/h2&gt; &lt;p&gt;Magenta je open-sourcový projekt, který vznikl pod vedením lidí z Google Brain. Snaží se využívat strojové učení pro tvorbu hudby, obrazů a jiných materiálů. Také zkoumá, jakým způsobem tvořit aplikace a rozhraní pro umělce, aby jim umožnil obohatit svůj proces umělecké tvorby o použití strojového učení. Vyvíjí jak knihovny a ML modely pro vývojáře, tak tvoří nástroje pro umělce. Pod kapotou využívají TensorFlow, což je další open-source projekt od Google, sloužící jako platforma pro strojové učení.&lt;/p&gt; &lt;p&gt;Magenta jednak tvoří modely pro vizuální umělce, které pokračují v kreslení nebo transformují obraz do jiného stylu. Širší část ale tvoří modely a nástroje pro hudebníky, kterým se budeme věnovat.&lt;/p&gt; &lt;h3 id=&quot;projekty&quot;&gt;Projekty&lt;/h3&gt; &lt;h4 id=&quot;nsynth&quot;&gt;&lt;a href=&quot;https://nsynthsuper.withgoogle.com/&quot;&gt;NSynth&lt;/a&gt;&lt;/h4&gt; &lt;p&gt;Jeden z nástrojů, které lidi z Magenty tvoří přímo pro hudebníky, je projekt NSynth. Základ tvoří algortimus postavený na neuronové síti, který se učí vlastnosti různých zvuků a na základě nich pak generuje nové zvuky založené na různých vlastnostech. Mimo toho také vyvinuli nástroj nazvaný open-sourcový hudební nástroj NSynth Super, který umožňuje tvořit nový zvuk na základě 4 vstupních zvuků. Slouží jako experiment, jakým způsobem umožnit hudebníkům využívat svět umělé inteligence.&lt;/p&gt; &lt;h4 id=&quot;magenta-studio&quot;&gt;&lt;a href=&quot;https://magenta.tensorflow.org/studio&quot;&gt;Magenta Studio&lt;/a&gt;&lt;/h4&gt; &lt;p&gt;Magenta Studio je sada nástrojů, které fungují buď jako samostatné aplikace a generují výstup v podobě not do formátu MIDI, nebo pak také sada pluginů do DAW nástroje Ableton Live pro tvorbu hudby. Tyto nástroje umí například generovat melodie, bicí nebo je kombinovat již na základě existujích notových záznamů. Upravují také rytmické stopy, aby zněly více “lidsky” nebo tvoří bicí přímo k vymyšlené basové lince nebo melodii. Tyto nástroje se opírají o stejné modely, které jsou uvolněny i pro vývojáře, viz níže.&lt;/p&gt; &lt;h3 id=&quot;modely&quot;&gt;Modely&lt;/h3&gt; &lt;h4 id=&quot;musicrnn&quot;&gt;&lt;a href=&quot;https://tensorflow.github.io/magenta-js/music/classes/_music_rnn_model_.musicrnn.html&quot;&gt;MusicRNN&lt;/a&gt;&lt;/h4&gt; &lt;p&gt;Jedná se o model, který pokračuje v zadaném notovém zápisu. Existují připravené vycvičené modely pro pokračování v melodii, bicích nebo improvizaci na dané akordy.&lt;/p&gt; &lt;h4 id=&quot;musicvae&quot;&gt;&lt;a href=&quot;https://tensorflow.github.io/magenta-js/music/classes/_music_vae_model_.musicvae.html&quot;&gt;MusicVAE&lt;/a&gt;&lt;/h4&gt; &lt;p&gt;Je to další model, který generuje úplně nové melodie, bicí atd. Taky umí zkombinovat předané notové záznamy do nových. Jsou již předtrénované modely, které tohle umí, rovněž i na základě vstupních akordů.&lt;/p&gt; &lt;h4 id=&quot;onsetsandframes&quot;&gt;&lt;a href=&quot;https://tensorflow.github.io/magenta-js/music/classes/_transcription_model_.onsetsandframes.html&quot;&gt;OnsetsAndFrames&lt;/a&gt;&lt;/h4&gt; &lt;p&gt;Tento model převádí zvukovou nahrávku piána do notového zápisu. Více taky &lt;a href=&quot;https://magenta.tensorflow.org/onsets-frames&quot;&gt;zde&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Na těchto modelech jsou pak vytvořený knihovny, stejně jako Tensorflow, který je použitý pro tvorbu modelů, jsou k dispozici pro Python a JavaScript. Tyto knihovny usnadňují používání modelů a generování notových záznamů, importy a exporty z MIDI souborů nebo propojení s MIDI zařízeními, napojení na hudební banky či manipulaci s notovými záznamy. Díky tomu není tak složité začít vyvíjet aplikace, které se o tyto ML modely opírají, jak ukazují tato dema, která jsou všechny vyvinuta pomocí magenta.js.&lt;/p&gt; &lt;h3 id=&quot;dema&quot;&gt;Dema&lt;/h3&gt; &lt;h4 id=&quot;tenori-off&quot;&gt;&lt;a href=&quot;https://tenori-off.glitch.me/&quot;&gt;Tenori-off&lt;/a&gt;&lt;/h4&gt; &lt;p&gt;Jedná se o jednuchý elektronický sekvencér, který umí generovat vzory pro bicí nebo syntetizér pomocí MusicRNN.&lt;/p&gt; &lt;h4 id=&quot;latent-cycles&quot;&gt;&lt;a href=&quot;https://codepen.io/teropa/full/rdoPbG/&quot;&gt;Latent Cycles&lt;/a&gt;&lt;/h4&gt; &lt;p&gt;Umožnuje vrstvit podobné melodie, které vznikly zkombinováním 4 melodií z MusicRNN pomocí MusicVAE. Jde tím docílit zajímavého výsledku plného melodických ozdob.&lt;/p&gt; &lt;h4 id=&quot;runn&quot;&gt;&lt;a href=&quot;http://vibertthio.com/runn/&quot;&gt;RUNN&lt;/a&gt;&lt;/h4&gt; &lt;p&gt;Jedná se o hudební hru, která se opírá o vygenerovanou melodii pomocí MusicRNN, na které člověk běží a kterou se musí snažit stíhat.&lt;/p&gt; &lt;h4 id=&quot;magenta-composer&quot;&gt;&lt;a href=&quot;https://magenta-composer.mmlab.cz/&quot;&gt;Magenta Composer&lt;/a&gt;&lt;/h4&gt; &lt;p&gt;Magenta Composer je jednoduchá aplikace, kterou jsem sám vytvořil. Umožňuje zkombinovat bicí, basovou linku, jednoduché akordy a melodii do jednoduchého beatu. Pro generování bicích a melodie se používá model MusicVAE a pro basu MusicRNN, akordy jsou statické, protože přímo tuhle možnost modely nenabízí a ze zkoumaných řešení tohle bylo to, co neslo nejvíce posluchatelné výsledky. Pro jednotlivé stopy je možné ovlivnit míru náhodnosti generování, výšku a také hraný zvuk díky použité zvukové bance &lt;a href=&quot;https://storage.googleapis.com/magentadata/js/soundfonts/sgm_plus&quot;&gt;SGM Plus&lt;/a&gt;.&lt;/p&gt; &lt;h2 id=&quot;proč-se-tím-vůbec-zaobírat&quot;&gt;Proč se tím vůbec zaobírat&lt;/h2&gt; &lt;p&gt;Možná vás ukázky aplikací a to, co umí, úplně nepřesvědčily. Vývoj je pořád dost v plenkách a je dost experimentální. Výsledky nejsou vždy přesvědčivé a ani na 100 % nikdy nebudou. Umělá inteligence dle mého bude vždy sloužit jako pomoc při tvorbě nových nápadů, ale nebude tvořit konečné skladby. Bude nabízet pouze nástroj, jak zvětšit svůj potenciál. A bude čistě na člověku jak dané vzory člověk rozvede a použije. Mimo to nabízí pomoc i v jiných aspektech jako třeba masteringu, polohování při mixu či chytrá náhrada backing tracků. Magenta není jediný projekt, který v této oblasti probíhá, to že to není pouze hračka dosvědčují například komerční projekty &lt;a href=&quot;https://www.aiva.ai/&quot;&gt;AIVA&lt;/a&gt; nebo &lt;a href=&quot;https://www.izotope.com/&quot;&gt;iZotope&lt;/a&gt;.&lt;/p&gt;</content><author><name>Michal Martinek</name></author><category term="magenta"/><category term="ai"/><category term="machine learning"/><category term="music"/><summary type="html">Umělá inteligence je v poslední době oblíbené téma a její využití si pomalu nachází cestu do našich životů, ať už o tom víme či nikoliv. Umožňuje nám automatizovat úlohy, které nejsou úplně triviální na automatizaci, a proto předtím musely být prováděny lidmi. Pomocí ní můžeme analyzovat velká množství dat a na základě nich detekovat/předpovídat věci, které by byly nad lidské síly. V praxi jste se s ní setkali např ve vyhledávači Google, virtuální asistentce Siri, různých chatbotech nebo třeba jako oběť cíleného marketingu. Ne všechno z toho úplně vyvolává váš úžas, možná jste už ale slyšeli o jejím potenciálu ve zdravotnictví, kde by pomáhala doktorům v diagnostice nemocí, nebo autonomních vozidlech. Což zní velmi slibně a věřím, že se obojího dočkáme. Jeden z dalších směrů, kde se umělá inteligence rozvíjí, je umění. Umožňuje tvůrcům hledat nové nápady, používat jiné techniky atd. Rád bych vám představil jeden projekt, který se zajímá o použití umělé inteligence jako pomocného nástroje v rámci kreativního procesu, a to Magenta.</summary></entry><entry xml:lang="cz"><title type="html">Fandíme slušně!</title><link href="https://fragaria.cz/blog/2019/08/19/fandime-slusne/" rel="alternate" type="text/html" title="Fandíme slušně!"/><published>2019-08-19T07:00:00+00:00</published><updated>2019-08-19T07:00:00+00:00</updated><id>https://fragaria.cz/blog/2019/08/19/fandime-slusne</id><content type="html" xml:base="https://fragaria.cz/blog/2019/08/19/fandime-slusne/">&lt;p&gt;Sparta, nebo Slávie? A nebo Bohemka? Každý člověk má určité preference a zaujímá nějaké názory. Od politiky, přes ženy (muže) po fotbal. My vývojáři jsme trochu odlišní “pacienti”. Preferujeme různé technologie a metodiky. A stejně jako u jiných koníčků do toho více či méně dáváme emoce. V tomto článku se zamýšlím nad profesním fundamentalismem, se kterým se stále setkávám po 15 let praxe v oboru.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/football-1350720_1920_eracx5&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/football-1350720_1920_eracx5 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/football-1350720_1920_eracx5 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/football-1350720_1920_eracx5 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/football-1350720_1920_eracx5 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/football-1350720_1920_eracx5 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/football-1350720_1920_eracx5 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;/figure&gt; &lt;h2 id=&quot;multidisciplinární-obor&quot;&gt;Multidisciplinární obor&lt;/h2&gt; &lt;p&gt;Z vývoje software se stal rozsáhlý multidisciplinární obor. Když jsem v něm v roce 2004 začal pracovat jako vývojář, ještě nebylo moc rozšířené rozdělovat role programátora a kodéra. Javascript bylo sprosté slovo. Všichni na něj nadávali. A již v této době jsem zaznamenával fundamentální názory některých kolegů. Zejména hlásáné “jedině Java”, ostatní je … (doplň sprosté slovo). Nedivil jsem se tomu. Java má velký historicky náskok, který byl podporován řadou velkých firem i vzdělávacích institucí. Na trhu existovali převážně programátoři v C či Javě. Navíc byl u těchto jazyků nutný překlad do binárního kódu a solidní objektový návrh. Poptávka po webových stránkách, resp. aplikací však často neležela v robustních aplikacích, ale často relativně primitivních stránkách s jednotkami formulářů. Tyto okolnosti vedly k rozvoji vhodnějších scriptovacích jazyků s minimálními požadavky na objektový návrh, tedy zcela opačné paradigma, než bylo tou dobou u rozšířených jazyků. Většina Java vývojářů pak fundamentálně odsuzovala jazyky jako PHP a toto stigma si s sebou stále neoprávněně nese. Je to právě programátor, kdo je vládcem kódu. Dodržuje-li správné návyky v konkrétním jazyce, tak by měl napsat kvalitní kód. Určitou paralelu s PHP vidím i v Javascriptu, od kterého paradoxně ostatní jazyky přebraly mnoho konstrukcí. Realita je ale taková, že se dnes jedná o jedny z nejpoužívanějších jazků pro webové aplikace. Trh technologií se tím diverzifikoval a vývojáři si na základě svých zkušeností vybrali obvykle jeden framework, který byli ochotni do krve bránit a z modernistů se pak stávali fundamentálové neochotni zkoumat výhody konkurenčních technologií. Kolegové, přiznejme si to - i my podléháme něčemu, čemu se říká technologický marketing a firmy jsou motivovány podporovat tu či onu technologii v rámci zachování a rozvoje pracovní síly, kterou potřebují. A upřímně - kdo z vás dělá v ASP, MooTools, Flash a další? Ohledně Flashe: Pamatujete si tu poptávku po ultra moderním hýbajícím se webu ve Flashi a ulpívání na něm?&lt;/p&gt; &lt;h2 id=&quot;metodiky&quot;&gt;Metodiky&lt;/h2&gt; &lt;p&gt;Odskočme si mimo samotné programování. Během posledních deseti let vznikly nebo zažily velký pokrok odvětví jako DevOps, UX/UI, testování. Též vznikly různé postupy jak software tvořit, např.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Test driven development&lt;/li&gt; &lt;li&gt;Model driven development&lt;/li&gt; &lt;li&gt;Behavior driven development&lt;/li&gt; &lt;li&gt;Acceptance test driven development&lt;/li&gt; &lt;li&gt;Feature driven development&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Všechny výše uvedené mají důraz na nějakou doménu ve vývoji software a jakmile se podaří nějaký projekt dokončit s použitím některého z výše uvedeného přístupu, často spadneme do psychologické pasti, že daný způsob je vhodný pro jakýkoliv projekt. Podobně je to i s volbou technologického stacku. Náročnost celého oboru pak vede k fundamentalismu převážně řídících pracovníků, nicméně specialistů nevyjímaje. Nemají ani moc na výběr. Je těžké nespadnout do psychologické pasti, protože nadřízení pracovníci požadují pro svá manažerská rozhodnutí podklady a vývojoví manažeři se musí něčeho chytit, zvláště pokud jsou méně zkušení. Jakmile se vám nějaké technologie či postupy podařilo použít v jednom projektu, předpokládáte, že stejný postup bude vhodný i na jiném projektu.&lt;/p&gt; &lt;p&gt;Klíčové je též nastavení vhodného způsobu řízení, dnes nejčastěji používané agilní metodiky. I zde jsem se setkal s jistým fundamentalismem, kdy se manažer snaží aplikovat něco, co neodpovídá charakteru projektu. Mám na mysli zanedbávání analytické a návrhové fáze iterací. V jedné úspěšné české firmě jsem se setkal s fundamentálním použitím Test driven developmentu. Až takovém, že zásadně nedokumentovali a všechno bylo popsané unit testy. Vývojáři přicházejí a odcházejí. Pochopit z testů business logiku projektu prostě nejde v únosném čase. A přitom v kombinaci s Model driven developmentem či dalšími najednou získáváte nesporné benefity. Bohužel, v ČR jsem se až na výjímky nesetkal s používám UML v praxi. Nedávno jsem se o tom bavil s kamarádem na pivu a ptal jsem se proč? Jsme jeden z mála inženýrských oborů, který neumí moc používat “dorozumívací řeč”. Podkle kamaráda to prostě moc lidí neumí správně aplikovat. Shledávám zde i další bariery, ale to už bychom moc odbočili a UML věnuji samostatný článek.&lt;/p&gt; &lt;h2 id=&quot;jak-poznat-že-se-stáváme-fundamentální&quot;&gt;Jak poznat, že se stáváme fundamentální&lt;/h2&gt; &lt;p&gt;Vývojový manažer vždy musí vzít v úvahu především:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;rozpočet projektu&lt;/li&gt; &lt;li&gt;rozsah, charakter a dobu životnosti projektu&lt;/li&gt; &lt;li&gt;stav pracovního trhu&lt;/li&gt; &lt;li&gt;již použité technologie ve firmě, resp. projektu&lt;/li&gt; &lt;li&gt;změny v řízení projektu&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Výše uvedené body mu pak předurčují omezenou množinu technologických a řídících možností. Varovným signálem, kdy je použitý nevhodný technologický set, jsou právě emoce a neochota prozkoumávat nové možnosti, které vedou k profesnímu fundamentalismu. U nás ve Fragarii to víme. Proto stále zkoumáme nové možnosti, technologie a postupy. Jediné, kde jsme věrní a neměníme kabát, jsou sportovní týmy. Sem emoce patří!&lt;/p&gt;</content><author><name>Michal Maněna</name></author><category term="TDD"/><category term="BDD"/><category term="MDD"/><category term="agile"/><summary type="html">Sparta, nebo Slávie? A nebo Bohemka? Každý člověk má určité preference a zaujímá nějaké názory. Od politiky, přes ženy (muže) po fotbal. My vývojáři jsme trochu odlišní “pacienti”. Preferujeme různé technologie a metodiky. A stejně jako u jiných koníčků do toho více či méně dáváme emoce. V tomto článku se zamýšlím nad profesním fundamentalismem, se kterým se stále setkávám po 15 let praxe v oboru.</summary></entry><entry xml:lang="en"><title type="html">Building a simple company website the Hard Way: Service workers</title><link href="https://fragaria.cz/blog/2019/04/08/building-a-simple-company-website-the-hard-way-service-workers/" rel="alternate" type="text/html" title="Building a simple company website the Hard Way: Service workers"/><published>2019-04-08T07:00:00+00:00</published><updated>2019-04-08T07:00:00+00:00</updated><id>https://fragaria.cz/blog/2019/04/08/building-a-simple-company-website-the-hard-way-service-workers</id><content type="html" xml:base="https://fragaria.cz/blog/2019/04/08/building-a-simple-company-website-the-hard-way-service-workers/">&lt;p&gt;Hi there once again! I’m gonna close our little &lt;em&gt;Building a simple company website the Hard Way&lt;/em&gt; series with a brief introduction to how service workers operate and why you should want them on your website, too. They’re cool and fancy, sometimes unnecessary, but likely still worth your time as I’m about to demonstrate.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/PIXNIO-227587-5372x3586_khjell&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/PIXNIO-227587-5372x3586_khjell 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/PIXNIO-227587-5372x3586_khjell 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/PIXNIO-227587-5372x3586_khjell 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/PIXNIO-227587-5372x3586_khjell 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/PIXNIO-227587-5372x3586_khjell 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/PIXNIO-227587-5372x3586_khjell 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;/figure&gt; &lt;section class=&quot;box&quot;&gt; &lt;p&gt;This article is a part of the &lt;i&gt;Building a simple company website the Hard Way&lt;/i&gt; series.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;a href=&quot;/blog/2018/09/03/building-a-simple-company-website-the-hard-way-typography-intro/&quot;&gt;Typography introduction&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/blog/2018/11/12/building-a-simple-company-website-the-hard-way-vertical-rhythm/&quot;&gt;Vertical rhythm&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Service workers&lt;/li&gt; &lt;/ol&gt; &lt;/section&gt; &lt;p&gt;Service workers are little JavaScript worker scripts that run in the background. Besides their registration, they are completely managed by the browser. Their execution is not limited to the time you directly interact with the related website: &lt;em&gt;they’re kinda alive even if you’re not using the site&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;As a result, they allow you to do some interesting stuff including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;support offline use of your pages&lt;/li&gt; &lt;li&gt;trigger push notifications for new content on your site&lt;/li&gt; &lt;li&gt;synchronize cached data for offline use in the background&lt;/li&gt; &lt;li&gt;promote addition of home screen link to your page on mobile devices&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For the sake of this article, we will focus on offline experience as it’s the most important feature for company portfolio websites.&lt;/p&gt; &lt;p&gt;Huge number of content viewers visit your page using their cellphones these days. As a result, your visitors frequently go offline temporarily as mobile networks are generally unrealiable.&lt;/p&gt; &lt;h2 id=&quot;saving-the-offline-situation&quot;&gt;Saving the offline situation&lt;/h2&gt; &lt;p&gt;Network connection hanging out in the middle of browsing often results in visitor simply quitting right away. This includes even situations when interruptions are to be expected: like during your descent down to the subway. Service workers can be used to mitigate such risk as they allow you to keep your website functional—albeit just partially—even while the visitor’s network connection is down.&lt;/p&gt; &lt;p&gt;How’s that possible? It’s because SW script can act like &lt;em&gt;a network proxy&lt;/em&gt;. It can intercept every request the browser makes to the server. This means you can modify the response (either forge one, or use a cached one) and avoid hitting the server completely. You can fill up the caches by pre-loading the content when SW script is being installed. This enables you to make your website blazing fast if you can anticipate next clicks of your users, too.&lt;/p&gt; &lt;p&gt;A typical scenario how offline support implementation looks like is following:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Assemble a &lt;strong&gt;list of assets to load automatically&lt;/strong&gt; when visitor hits your site. This should include the content that is most likely to be required in near future. It can be anything you can think of: page documents, images, scripts, videos. Anything you want. Just make sure you’re &lt;em&gt;not too greedy&lt;/em&gt; about the data transfer. Remember: we do this for mobile devices where extensive data transfer can be costly.&lt;/li&gt; &lt;li&gt;Upon service worker installation, &lt;strong&gt;pre-load these assets&lt;/strong&gt; and store them in service worker cache.&lt;/li&gt; &lt;li&gt;Use service worker to &lt;strong&gt;proxy network requests&lt;/strong&gt;. Impose a timeout to load the content from the real server. If the server doesn’t make it on time, offer the cached version instead.&lt;/li&gt; &lt;li&gt;If both network and caches fail (e.g. when hitting something that wasn’t pre-loaded), serve some kind of „&lt;em&gt;You’re offline&lt;/em&gt;“ page so that the visitor knows what happend. This improves the general user experience.&lt;/li&gt; &lt;/ol&gt; &lt;h2 id=&quot;using-service-workers&quot;&gt;Using service workers&lt;/h2&gt; &lt;p&gt;It is important to understand the basic lifecycle of a service worker to avoid potiential mistakes. Have a look at following diagram:&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile &quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/f_svg/fragaria.cz/posts/sw-lifecycle_t6dh0u&quot; srcset=&quot;&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;Service worker lifecycle.&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;After you’ve registered the SW, browser will run its installation stage. Next, the SW gets activated and it starts working as our network proxy. It will stay activated until it’s replaced by a new SW script or in case it fails somewhere along the way.&lt;/p&gt; &lt;p&gt;Particularly important is the condition when new SW get installed. By definition, this happens when service worker file &lt;em&gt;gets changed&lt;/em&gt;. Ultimately, it means new SW is installed once the size of the current SW script is different from the new one—&lt;em&gt;bytewise&lt;/em&gt;. Unfortunately, the exact process is little counterintuitive. Old SW is not replaced immediately after new SW is detected, but once the user leaves the page. This means closing it, not just refreshing. Weird? Yes but fortunately fixable. We can avoid default behavior by calling &lt;code class=&quot;highlighter-rouge&quot;&gt;skipWaiting&lt;/code&gt; SW method during the installation as shown below.&lt;/p&gt; &lt;p&gt;Still got your attention? Good. Let’s talk code for a moment. I’ll share few examples from this very website.&lt;/p&gt; &lt;h3 id=&quot;service-worker-registration&quot;&gt;Service worker registration&lt;/h3&gt; &lt;p&gt;You can initialize your service worker with a simple JS snippet that points the browser to the service worker script. It’s always a good idea to verify your browser supports service workers. All of the modern ones do but someone might still be using an old IE, right?&lt;/p&gt; &lt;p&gt;Next, just call &lt;code class=&quot;highlighter-rouge&quot;&gt;navigator.serviceWorker.register&lt;/code&gt; and provide it the path to the worker script itself. In following example, this script is available at &lt;code class=&quot;highlighter-rouge&quot;&gt;/sw.js&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;serviceWorker&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceWorker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/sw.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[sw] Service Worker registration successful with scope: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;registration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[sw] Service Worker registration failed: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Once this snippet is run, registration is finished. Browser takes over and starts the script in the background, proceeding to the installation stage.&lt;/p&gt; &lt;h3 id=&quot;pre-loading-content&quot;&gt;Pre-loading content&lt;/h3&gt; &lt;p&gt;Installation stage is there to prepare the SW for its real job. In our case, we want to use it as a network proxy. This is the right time to pre-load our content and fill up the caches. It’s rather straightforward:&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Cache assets&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/assets/favicons/android-chrome-192x192.png&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/assets/favicons/android-chrome-512x512.png&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/assets/favicons/apple-touch-icon.png&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/assets/favicons/favicon-16x16.png&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/assets/favicons/favicon-32x32.png&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Cache last 10 blog posts&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/blog/2019/04/05/building-a-simple-company-website-the-hard-way-service-workers/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/blog/2019/03/29/kouzlo-malych-projektu/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/blog/2019/02/05/runtime-configuration-in-web-applications/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Cache other pages&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/404.html&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/blog/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/work-with-us/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Cache name: adjust version number to invalidate service worker cache.&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CACHE_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sw-cache-v-1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;precache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;caches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CACHE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`[sw] Opened cache &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CACHE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`[sw] Installing ...`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Make sure not to get stuck waiting for the current to become terminated.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;skipWaiting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Perform pre-loading of cached content.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;waitUntil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;precache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Ultimately, we need a list of URLs to pre-load. Cache will contain some critical static assets, last 10 blog posts and few other important pages.&lt;/p&gt; &lt;p&gt;Next, we register the handler for the &lt;code class=&quot;highlighter-rouge&quot;&gt;install&lt;/code&gt; event. As a result, &lt;code class=&quot;highlighter-rouge&quot;&gt;precache&lt;/code&gt; is executed which adds all the assets to the SW cache. Caches are automatically available for every SW as the &lt;code class=&quot;highlighter-rouge&quot;&gt;caches&lt;/code&gt; global object and they are clever enough to know how to load URLs. Naturally, this will result in bunch of network requests made by the browser.&lt;/p&gt; &lt;p&gt;Before caching starts we also call &lt;code class=&quot;highlighter-rouge&quot;&gt;self.skipWaiting()&lt;/code&gt; method to ensure our new worker gets activated once install is finished. If we didn’t call it, old SW would be replaced &lt;em&gt;after&lt;/em&gt; user leaves the page which is not desirable.&lt;/p&gt; &lt;p&gt;Please note that &lt;code class=&quot;highlighter-rouge&quot;&gt;event&lt;/code&gt; is promise-aware so we can make it wait for &lt;code class=&quot;highlighter-rouge&quot;&gt;precache&lt;/code&gt; to finish by using &lt;code class=&quot;highlighter-rouge&quot;&gt;event.waitUntil&lt;/code&gt;.&lt;/p&gt; &lt;h3 id=&quot;network-proxying&quot;&gt;Network proxying&lt;/h3&gt; &lt;p&gt;When the SW is activated, it can start proxying network requests. This will allow us to make our page work offline. In order to do so, we need to add another handler, this time for &lt;code class=&quot;highlighter-rouge&quot;&gt;fetch&lt;/code&gt; browser event. &lt;code class=&quot;highlighter-rouge&quot;&gt;fetch&lt;/code&gt; is called whenever a request to our server is made by the browser. We can hijack it and make it return cached responses in case server is too slow to respond (which means network is down as our pages are purely static and quick to respond with). Basic script is following:&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;storeInCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;caches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CACHE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadFromNetwork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fulfill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clearTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseClone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fulfill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;storeInCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseClone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadFromCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;caches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CACHE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;matching&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;matching&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;no-match&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadPipe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadFromNetwork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadFromCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;respondWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadPipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;We impose &lt;em&gt;1500 ms timeout&lt;/em&gt; to allow loading resources using the network. If this fails, we provide the cached version in case it’s available.&lt;/p&gt; &lt;p&gt;Let’s clean up the fetch handler a little. We do not want to alter the responses for &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; HTTP method. &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; usually means form submission. In that case, it would be unwise to pretend submit succeeded. Let’s intervene only for &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;:&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadPipe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadFromNetwork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadFromCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadPipe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;respondWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;offline-pages&quot;&gt;Offline pages&lt;/h3&gt; &lt;p&gt;In order to show user a nice offline page, we gotta improve our &lt;code class=&quot;highlighter-rouge&quot;&gt;loadPipe&lt;/code&gt; pipeline. Specifically, we need to handle the case when cached version of the page is &lt;em&gt;unavailable&lt;/em&gt;:&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadFromNetwork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadFromCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;[sw] Could not load, redirecting to offline page &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;caches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CACHE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/offline/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;respondWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/offline/&lt;/code&gt; should always be in the cache as we’ve added it to the cache during installation stage.&lt;/p&gt; &lt;h2 id=&quot;homescreen-link-to-your-page&quot;&gt;Homescreen link to your page&lt;/h2&gt; &lt;p&gt;Another nice benefit of implementing a service worker is ability to prompt your visitors to add a website shortcut on their phone homescreens. It will look just like any other mobile application launch button and open in a webview automatically. It’s a first step towards making your website work like a &lt;em&gt;Progressive Web App&lt;/em&gt;. You need to meet a few more requirements though:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Your page has to be &lt;em&gt;served using HTTPS&lt;/em&gt;. But you do that already anyway, don’t you?&lt;/li&gt; &lt;li&gt;You need to &lt;em&gt;prepare the icon&lt;/em&gt; for the app shortcut. Usually, your site logo will do just fine.&lt;/li&gt; &lt;li&gt;You have to provide a &lt;em&gt;manifest file&lt;/em&gt;. The easiest way to create it is using some online generator, like &lt;a href=&quot;https://app-manifest.firebaseapp.com/&quot;&gt;this one&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Once you’ve accomplished all of these tasks and have a working SW, Chrome will prompt visitors to add shortcut automatically.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile &quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/Screenshot_2019-04-07-14-23-47-738_com.android.chrome_q0rwob&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/Screenshot_2019-04-07-14-23-47-738_com.android.chrome_q0rwob 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/Screenshot_2019-04-07-14-23-47-738_com.android.chrome_q0rwob 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/Screenshot_2019-04-07-14-23-47-738_com.android.chrome_q0rwob 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/Screenshot_2019-04-07-14-23-47-738_com.android.chrome_q0rwob 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/Screenshot_2019-04-07-14-23-47-738_com.android.chrome_q0rwob 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/Screenshot_2019-04-07-14-23-47-738_com.android.chrome_q0rwob 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;Google Chrome suggests adding a home screen shortcut.&lt;/figcaption&gt; &lt;/figure&gt; &lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt; &lt;p&gt;In a brief example, we’ve demonstrated how you can use service workers to improve the overall user experience—especially on mobile devices. In a real world scenario, we would need to add a few more moving parts like syncing up the caches in the background (when new content comes up) but hopefully we’ve at least gave you a little headstart. &lt;em&gt;Progessive Web Apps&lt;/em&gt; are way to go these days and running a service worker is one of key requirements to make your app a progressive one.&lt;/p&gt;</content><author><name>Filip Vařecha</name></author><category term="javascript"/><category term="service workers"/><category term="progressive web apps"/><summary type="html">Hi there once again! I’m gonna close our little Building a simple company website the Hard Way series with a brief introduction to how service workers operate and why you should want them on your website, too. They’re cool and fancy, sometimes unnecessary, but likely still worth your time as I’m about to demonstrate.</summary></entry><entry xml:lang="cz"><title type="html">Kouzlo malých projektů</title><link href="https://fragaria.cz/blog/2019/03/29/kouzlo-malych-projektu/" rel="alternate" type="text/html" title="Kouzlo malých projektů"/><published>2019-03-29T07:00:00+00:00</published><updated>2019-03-29T07:00:00+00:00</updated><id>https://fragaria.cz/blog/2019/03/29/kouzlo-malych-projektu</id><content type="html" xml:base="https://fragaria.cz/blog/2019/03/29/kouzlo-malych-projektu/">&lt;p&gt;Měsíce nebo roky vyvíjet nějaký velký propracovaný systém je zábava a tak. Když se ale zpětně ohlédnu na všechny své projekty, tak mi až překvapivě velkou radost udělaly i drobnosti, jejichž vytvoření zabralo jednotky hodin. V článku se vám pochlubím svým TOP 3 žebříčkem.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/kouzlo-malych-projektu-hero_n5emzb&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/kouzlo-malych-projektu-hero_n5emzb 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/kouzlo-malych-projektu-hero_n5emzb 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/kouzlo-malych-projektu-hero_n5emzb 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/kouzlo-malych-projektu-hero_n5emzb 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/kouzlo-malych-projektu-hero_n5emzb 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/kouzlo-malych-projektu-hero_n5emzb 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;/figure&gt; &lt;p&gt;Aby bylo jasno, nemluvím o naprogramování sto padesátého todo listu s využitím nejnovějšího frameworku. Myslím případy, kdy mně někdo z okolí řekl o svém reálném problému a já ho nějak jednoduše softwarově vyřešil. Společnými jmenovateli těchto pár mini-projektů bylo tedy, že byly určeny pro někoho koho znám, jejich realizace byla velice rychlá, provoz levný nebo zdarma, a hlavně že v podstatě bez jakékoliv údržby dobře slouží už několik let.&lt;/p&gt; &lt;h2 id=&quot;projekt-1-správa-revizí&quot;&gt;Projekt #1: správa revizí&lt;/h2&gt; &lt;p&gt;Můj tchán je elektrikář. Ač to není jeho hlavní činnost, tak během roku provede nižší desítky revizí hromosvodů nebo různých elektrických zařízení.&lt;/p&gt; &lt;p&gt;Revize si eviduje v Excelu, a tak na jednom místě přehledně vidí, co kdy a kde realizoval. Zadání je triviální: chce aby jej software na základě této tabulky upozornil, že některá z revizí brzy vyprší. Díky tomu se totiž může zákazníkovi ozvat a nabídnout mu opětovné provedení revize.&lt;/p&gt; &lt;p&gt;Moje krátká úvaha:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Co si vždy datum vypršení revize poznačit i do kalendáře na mobilu? Ne. Je to ruční práce navíc, na kterou se snadno zapomene.&lt;/li&gt; &lt;li&gt;Přidat do Excelu makro. Jak ale zajistit aby se spouštělo samo?&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;https://www.google.com/sheets/about/&quot;&gt;Google Sheets&lt;/a&gt; aneb Excel v cloudu. Bez práce zajištěné zálohování a pohodlná dostupnost z nativní mobilní aplikace. Ač to nebylo vlastně úkolem, tak tohle chceme nezávisle na tom, co bude dál.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Teď už tedy jen zkusit zjistit jestli by šlo “makro” vytvořit i v Google Sheets, jak jej automaticky spouštět, a jak z makra v případě potřeby poslat mail.&lt;/p&gt; &lt;p&gt;Po chvilce zjišťuji, že vše jde velice snadno. &lt;a href=&quot;https://developers.google.com/apps-script/&quot;&gt;Google Apps Script&lt;/a&gt; je platforma v níž jde JavaScriptem programovat a rozšiřovat většina Google služeb. Skript se uloží přímo na Google Drive, k načtení tabulky se použije třída &lt;a href=&quot;https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app&quot;&gt;SpreadsheetApp&lt;/a&gt;, automatické spouštění umí zařídit něco co se jmenuje &lt;a href=&quot;https://developers.google.com/apps-script/guides/triggers/installable&quot;&gt;Time-driven triggers&lt;/a&gt;, mail se snadno pošle pomocí &lt;a href=&quot;https://developers.google.com/apps-script/reference/mail/mail-app&quot;&gt;MailApp.sendEmail&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Zbytek už je jen trocha práce s datumy a textem. Výsledkem je tedy tabulka úplně stejná jako ta původní, pouze uložená v jiném “programu”. Skript se každý den spustí, projde datumy revizí a zkontroluje zda některá z nich v následujících 10 dnech nevyprší. Pokud ano, tak se údaje o ní pošlou v mailovém upozornění. A je hotovo.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile &quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/sprava-revizi_rplnya&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/sprava-revizi_rplnya 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/sprava-revizi_rplnya 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/sprava-revizi_rplnya 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/sprava-revizi_rplnya 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/sprava-revizi_rplnya 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/sprava-revizi_rplnya 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;/figure&gt; &lt;p&gt;Pro zajímavost odkazuji na &lt;a href=&quot;https://gist.github.com/osramek/6bf407660e64079031424d6f681fce4b&quot;&gt;řešení&lt;/a&gt;. Kód je napsaný spíše rychle než pěkně, a trochu jej komplikuje rozdělení na revize hromosvodů a elektrických zařízení (kontrolují se tedy 2 sloupečky). I tak má ale všeho všudy 90 řádků.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Pozn.&lt;/em&gt; V dnešní době bych při stejném zadání zvážil, zda by nešlo použít nějakou službu typu &lt;a href=&quot;https://ifttt.com/&quot;&gt;IFTTT&lt;/a&gt;.&lt;/p&gt; &lt;h2 id=&quot;projekt-2-nákupní-pomocník&quot;&gt;Projekt #2: nákupní pomocník&lt;/h2&gt; &lt;p&gt;Kamarádka v jistém zahraničním e-shopu nakupuje zboží, které pak přeprodává v ČR. E-shop trochu ve velkoobchodním stylu nabízí formulář na hromadné ověření dostupnosti zboží. Zboží je často vyprodáno, a dotazování přes formulář je nejlepší možný způsob, jak nepřijít o zajímavé nákupy.&lt;/p&gt; &lt;p&gt;Ručním vyplňováním formuláře kamarádka trávila spoustu času a nabízelo se zkusit tento úkon pomocí nějakého software automatizovat. Jako první krok, jsme se domluvili, že vytvořím program, který bude umět vyplněný formulář uložit a někdy později jedním klikem zpět načíst.&lt;/p&gt; &lt;p&gt;Z programátorského pohledu tedy potřebuji spustit JavaScript, který poběží v kontextu stránky třetí strany, a bude tak mít možnost z &lt;a href=&quot;https://en.wikipedia.org/wiki/Document_Object_Model&quot;&gt;DOMu&lt;/a&gt; údaje vytáhnout, případně DOM modifikovat.&lt;/p&gt; &lt;p&gt;Toho by šlo dosáhnout vlastním rozšířením do prohlížeče, ale toto řešení mě tehdy nejspíš ani nenapadlo. Automaticky jsem sáhl dle mého názoru po lepší variantě, a tou je &lt;a href=&quot;https://en.wikipedia.org/wiki/Bookmarklet&quot;&gt;bookmarklet&lt;/a&gt;. Co na tom, že tato “technologie” má už vrchol své slávy nejspíše za sebou, dovolí mi lehce vyřešit můj úkol. A proč si myslím, že to byla lepší varianta? Snadnější vytvoření, triviální “instalace” a nezávislost na prohlížeči. Později kamarádka opravdu ocenila, že program jde spouštět i na iOS zařízení v mobilním Safari. Kód samotného bookmarkletu je triviální, v podstatě jen načítá a spouští externí JS soubor se samotným programem. Tímto trikem totiž dosáhneme bezproblémové aktualizace. Kód bookmarkletu zůstává pořád stejný, a přesto pouhou změnou externího JS změníme chování bookmarkletu. Vše bez jakéhokoliv zásahu uživatele.&lt;/p&gt; &lt;p&gt;Zbývalo vyřešit kam ukládat data, tj. jednotlivá vyplnění formuláře. Data nemohla být uložena lokálně, takže jako cestu nejmenšího odporu jsem tehdy vybral platformu &lt;a href=&quot;https://en.wikipedia.org/wiki/Parse_(platform)&quot;&gt;Parse&lt;/a&gt;. Později když byla služba zrušena, jsem ji snadno nahradil pomocí &lt;a href=&quot;https://firebase.google.com/&quot;&gt;Firebase&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;V krátkosti ještě shrnu projekt z uživatelského pohledu. Až bylo hotovo, tak jsem kamarádce poslal mail s odkazem na statickou www stránku. Tam byl umístění samotný bookmarklet s popisem jak si jej přidat do prohlížeče (obyčejným přetažením na lištu záložek, kouzlo!). Pak kamarádka přešla na stránky e-shopu a klikla na svou novou záložku. Do horní části stránky se přidalo rozhraní pro ovládání programu, tak jak je znázorněno na screenshotu níže. Existuje tedy 80 různých pozic z nichž každá obsahuje jedno konkrétní vyplnění celého formuláře. Vyplněné formuláře se tak dají velice jednoduše ukládat, načítat a případně i přepisovat.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/nakupni-pomocnik_kdtcpr&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/nakupni-pomocnik_kdtcpr 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/nakupni-pomocnik_kdtcpr 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/nakupni-pomocnik_kdtcpr 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/nakupni-pomocnik_kdtcpr 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/nakupni-pomocnik_kdtcpr 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/nakupni-pomocnik_kdtcpr 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;/figure&gt; &lt;p&gt;Tento projekt jsme pak společně ještě trochu rozvíjeli, ale toto byl ten funkční základ. Přestože vytvoření trvalo jednotky hodin a jednalo se zhruba o 110 řádků kódu, byl prográmek svému novému majiteli hodně užitečný a ušetřil spoustu času.&lt;/p&gt; &lt;h2 id=&quot;projekt-3-web-školky&quot;&gt;Projekt #3: web školky&lt;/h2&gt; &lt;p&gt;Tohle někomu bude asi připadat divné, ale klidně se přiznám. Jeden z projektů co mi udělal radost byl úplně obyčejný web na WordPressu.&lt;/p&gt; &lt;p&gt;Školka mých dětí potřebovala webové stránky, tak jsem se nabídl, že je udělám. Koupil jsem doménu a dal se do průzkumu trhu. Už si přesně nepamatuju detaily, ale vím jistě, že se to hodně zvrtlo. Hostované služby typu &lt;a href=&quot;https://www.webnode.cz/&quot;&gt;Webnode&lt;/a&gt; se mi nelíbily nebo nechtěly platit, WordPress je přece starý pomalý moloch, statické generátory byly cool, ale šablony byly mizerné a jak by vlastně školka web aktualizovala? Matně si vzpomínám že původně zamýšlený průzkum se neskutečně protáhl. Jen jako ve flashbacku vidím scénu, kdy pomocí nějakého minimalistického CSS frameworku kóduju responzivní menu…&lt;/p&gt; &lt;p&gt;Naštěstí mě pak něco osvítilo, a přestal jsem řešit blbosti. Během pár hodin jsem na svůj běžící VPS nainstaloval &lt;a href=&quot;https://wordpress.org/&quot;&gt;WordPress&lt;/a&gt;, zapnul standardní šablonu &lt;a href=&quot;https://wordpress.org/themes/twentyfifteen/&quot;&gt;Twenty Fifteen&lt;/a&gt;, na fotobance koupil za pár dolarů pěkně barevnou ilustraci na pozadí a bylo hotovo. Nějakou dobu zabrala struktura webu a plnění obsahem, ale vše šlo rychle a hlavně naprosto hladce. Další požadavky ze školky vždy už byly jen otázkou krátkého hledání a několika kliků v adminu.&lt;/p&gt; &lt;p&gt;A že jsem si při tomhle mini-projektu vůbec nezaprogramoval? Nevadí. Myslím že právě díky tomu, se dostal i na tento můj TOP 3 seznam. S minimálním úsilím jsem totiž vyřešil předložený problém. Web vypadá pěkně, bezproblémově funguje na jakémkoliv zařízení, administrace je snadná, vedení školky nadšené.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/web-skolky_kq2qhn&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/web-skolky_kq2qhn 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/web-skolky_kq2qhn 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/web-skolky_kq2qhn 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/web-skolky_kq2qhn 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/web-skolky_kq2qhn 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/web-skolky_kq2qhn 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;/figure&gt; &lt;h2 id=&quot;závěr&quot;&gt;Závěr&lt;/h2&gt; &lt;p&gt;Bez jakékoliv diskuze velké nebo složité projekty mají něco do sebe. Na druhou stranu se někdy za sebou člověk ohlédne a zjistí, že za uplynulý týden projekt zas tak moc neposunul.&lt;/p&gt; &lt;p&gt;Projekty popsané v tomto článku jsou opravdu miniaturní. První dva mají jediného uživatele a web školky v malém městě taky netrhá rekordy v návštěvnosti.&lt;/p&gt; &lt;p&gt;Přesto mám z projektů radost. Pokud bych to sečetl, tak jsem totiž během zhruba 2 dnů dokázal realizovat 3 projekty pro 3 různé “zákazníky”. A uznejte, koho z nás netěší pohled na spokojeného zákazníka?&lt;/p&gt;</content><author><name>Ondřej Šrámek</name></author><category term="google apps script"/><category term="google sheets"/><category term="javascript"/><category term="dom"/><category term="bookmarklet"/><category term="parse"/><category term="firebase"/><category term="wordpress"/><summary type="html">Měsíce nebo roky vyvíjet nějaký velký propracovaný systém je zábava a tak. Když se ale zpětně ohlédnu na všechny své projekty, tak mi až překvapivě velkou radost udělaly i drobnosti, jejichž vytvoření zabralo jednotky hodin. V článku se vám pochlubím svým TOP 3 žebříčkem.</summary></entry><entry xml:lang="en"><title type="html">Runtime configuration in web applications</title><link href="https://fragaria.cz/blog/2019/02/05/runtime-configuration-in-web-applications/" rel="alternate" type="text/html" title="Runtime configuration in web applications"/><published>2019-02-05T07:59:00+00:00</published><updated>2019-02-05T07:59:00+00:00</updated><id>https://fragaria.cz/blog/2019/02/05/runtime-configuration-in-web-applications</id><content type="html" xml:base="https://fragaria.cz/blog/2019/02/05/runtime-configuration-in-web-applications/">&lt;p&gt;Every time you start to develop a new frontend application, you are happy with a single instance. But then it gains traction and suddenly you are in need of multiple separate installations — be it for &lt;a href=&quot;https://en.wikipedia.org/wiki/Quality_assurance&quot;&gt;QA&lt;/a&gt;, demonstrations or other purposes. And you are suddenly facing a new problem: How do I inject the instances with configuration values that are different for each environment?&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/cargo-cargo-container-clouds-1427541_f5dhrn&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/cargo-cargo-container-clouds-1427541_f5dhrn 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/cargo-cargo-container-clouds-1427541_f5dhrn 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/cargo-cargo-container-clouds-1427541_f5dhrn 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/cargo-cargo-container-clouds-1427541_f5dhrn 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/cargo-cargo-container-clouds-1427541_f5dhrn 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/cargo-cargo-container-clouds-1427541_f5dhrn 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;/figure&gt; &lt;h2 id=&quot;traditional-way&quot;&gt;Traditional way&lt;/h2&gt; &lt;p&gt;In the early days, these values, such as an URL of your API, used to be hardcoded in your application and it was a pain to change them all.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;http://api.example.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// do stuff&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Then it became quite common to put them into a separate file. That led to multiple environment-specific files.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ENVIRONMENT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./config&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// } else if (process.env.ENVIRONMENT === 'staging') {&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// } else if (process.env.ENVIRONMENT === 'qa') {&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./config-dev&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;API_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// do stuff&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Then somebody figured out that having multiple files does not really scale well. If you need a new environment, you need to commit a new file and particularly for short-lived environments that became an unwanted overhead.&lt;/p&gt; &lt;p&gt;So the environment variables started to be used directly and the apps became full of calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;process.env.VARIABLE&lt;/code&gt; which is seemingly great and works really well.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;API_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// do stuff&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;And if you combine these things, you end up with something like &lt;a href=&quot;https://www.npmjs.com/package/dotenv&quot;&gt;dotenv&lt;/a&gt;, which is a really nice, portable solution that scales well. There are of course many other flavours of this and an exhaustive list of them can be found in &lt;a href=&quot;https://medium.freecodecamp.org/environment-settings-in-javascript-apps-c5f9744282b6&quot;&gt;this article&lt;/a&gt;.&lt;/p&gt; &lt;h2 id=&quot;docker-comes-into-play&quot;&gt;Docker comes into play&lt;/h2&gt; &lt;p&gt;Unfortunately, there is one common issue with all these solutions: &lt;strong&gt;All of the options are resolved during build time.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Modern Javascript applications are distributed as optimized packages (built by &lt;a href=&quot;https://webpack.js.org/&quot;&gt;Webpack&lt;/a&gt; or &lt;a href=&quot;https://parceljs.org/&quot;&gt;Parcel&lt;/a&gt;) and that’s perfectly fine. But the &lt;code class=&quot;highlighter-rouge&quot;&gt;process.env&lt;/code&gt; statements get replaced by the actual values during build phase and that’s it.&lt;/p&gt; &lt;p&gt;Why is that a problem? Well, if you have many environments and your application is run as, let’s say &lt;a href=&quot;https://www.docker.com&quot;&gt;Docker&lt;/a&gt; containers, you need to have as many builds as there are environments.&lt;/p&gt; &lt;p&gt;And that is hell.&lt;/p&gt; &lt;p&gt;The typical &lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt; for a frontend Javascript application might look like this:&lt;/p&gt; &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM mhart/alpine-node:10 RUN apk update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apk upgrade &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apk add &lt;span class=&quot;nt&quot;&gt;--no-cache&lt;/span&gt; bash git openssh WORKDIR /usr/src/app COPY package&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.json ./ RUN npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;COPY &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; ARG NODE_ENV ARG API_URL RUN npm run build CMD &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;npm&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;run&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;So you install your dependencies, &lt;em&gt;build the application bundle&lt;/em&gt; with variables provided by &lt;code class=&quot;highlighter-rouge&quot;&gt;ARG&lt;/code&gt; statements and then start some basic webserver that serves the built artifact to the public.&lt;/p&gt; &lt;p&gt;The problem here is, that only the &lt;code class=&quot;highlighter-rouge&quot;&gt;CMD&lt;/code&gt; statement is run during the container startup. Everything else is done during build time. So you have no way of injecting anything into the resulting bundle. That does not really help, does it?&lt;/p&gt; &lt;p&gt;&lt;em&gt;Sidenote: There are of course some environment variables common to all of your environments such as commit hash, version number etc. Keep them hardcoded with &lt;code class=&quot;highlighter-rouge&quot;&gt;process.env&lt;/code&gt; calls, there is no harm in that.&lt;/em&gt;&lt;/p&gt; &lt;h2 id=&quot;environment-agnostic-builds&quot;&gt;Environment-agnostic builds&lt;/h2&gt; &lt;p&gt;So how can this be solved? We apparently have to populate the configuration during the &lt;code class=&quot;highlighter-rouge&quot;&gt;CMD&lt;/code&gt; statement. But how?&lt;/p&gt; &lt;p&gt;The answer is simple: &lt;strong&gt;Don’t include your configuration into your builds.&lt;/strong&gt; Cool. But can you give me a simple checklist?&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/change-choices-choose-277615_gnx2al&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/change-choices-choose-277615_gnx2al 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/change-choices-choose-277615_gnx2al 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/change-choices-choose-277615_gnx2al 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/change-choices-choose-277615_gnx2al 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/change-choices-choose-277615_gnx2al 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/change-choices-choose-277615_gnx2al 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;Many environments ahead of you&lt;/figcaption&gt; &lt;/figure&gt; &lt;ol&gt; &lt;li&gt;Change all calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;process.env&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;window.env&lt;/code&gt; (Yes, I know that globals are ugly. Deal with it.) or anything you want such as &lt;code class=&quot;highlighter-rouge&quot;&gt;window.myShinyUnicorn&lt;/code&gt;. The only important thing is that it’s something that is provided &lt;strong&gt;by the browser and not your build tool&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Create a config file with defaults, such as &lt;code class=&quot;highlighter-rouge&quot;&gt;env.js&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;API_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://api.example.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Load this file &lt;em&gt;before&lt;/em&gt; everything else in your HMTL. Check with your build system where it injects the compiled Javascript files. The config file has to be the first thing your application loads.&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/env.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt; ... &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Change your startup script used in a &lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt; so that it replaces the contents of the config file and only &lt;strong&gt;after that&lt;/strong&gt; runs the application. We are for instance using a trivial shell script called &lt;code class=&quot;highlighter-rouge&quot;&gt;build-env-file.sh&lt;/code&gt; for that. Make sure that you replace the config file in the actual location that is served by your webserver.&lt;/p&gt; &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;window.env = { API_URL: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$API_URL&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; };&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ./public/env.js &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Run your docker images like this:&lt;/p&gt; &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;API_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://production-api.example.com my-docker-image &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;API_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://staging-api.example.com my-docker-image &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;And that’s it. You have just prepared your application for a happy future-proof multi-environment life.&lt;/p&gt; &lt;h2 id=&quot;why-is-this-even-a-thing&quot;&gt;Why is this even a thing?&lt;/h2&gt; &lt;p&gt;Of course this is not a new problem, it has been around at least since &lt;a href=&quot;https://stackoverflow.com/questions/5018456/environment-specific-build-vs-loading-environment-specific-properties&quot;&gt;Java&lt;/a&gt; and basically all other programs that need to be built before they are used by the consumers.&lt;/p&gt; &lt;p&gt;In the web community, I believe this has become a topic only after &lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt; &lt;a href=&quot;https://blog.heroku.com/twelve-factor-apps&quot;&gt;published&lt;/a&gt; their &lt;a href=&quot;https://12factor.net&quot;&gt;12 factor methodology&lt;/a&gt; in 2013. The methodology basically leads developers towards building reusable artifacts and external configuration is one of the important factors in that venture.&lt;/p&gt; &lt;p&gt;Heroku itself &lt;a href=&quot;https://github.com/mars/create-react-app-buildpack#compile-time-vs-runtime&quot;&gt;supports a variant&lt;/a&gt; of a solution described in this article for React based app with &lt;a href=&quot;https://github.com/mars/heroku-js-runtime-env&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@mars/heroku-js-runtime-env&lt;/code&gt;&lt;/a&gt; package. It does not use a special file, but rather injects the variables directly into your code. I personally have not used it before, but this approach might be a safer option for you than exposing configuration on a special endpoint.&lt;/p&gt; &lt;p&gt;In the end, I really believe that if your applications are running in multiple environments and somewhere in the clouds, you should aspire for single application builds that can be run over and over with different configurations.&lt;/p&gt;</content><author><name>Jirka Chadima</name></author><category term="javascript"/><category term="webpack"/><category term="configuration"/><summary type="html">Every time you start to develop a new frontend application, you are happy with a single instance. But then it gains traction and suddenly you are in need of multiple separate installations — be it for QA, demonstrations or other purposes. And you are suddenly facing a new problem: How do I inject the instances with configuration values that are different for each environment?</summary></entry><entry xml:lang="en"><title type="html">Building a simple company website the Hard Way: Vertical rhythm</title><link href="https://fragaria.cz/blog/2018/11/12/building-a-simple-company-website-the-hard-way-vertical-rhythm/" rel="alternate" type="text/html" title="Building a simple company website the Hard Way: Vertical rhythm"/><published>2018-11-12T09:00:00+00:00</published><updated>2018-11-12T09:00:00+00:00</updated><id>https://fragaria.cz/blog/2018/11/12/building-a-simple-company-website-the-hard-way-vertical-rhythm</id><content type="html" xml:base="https://fragaria.cz/blog/2018/11/12/building-a-simple-company-website-the-hard-way-vertical-rhythm/">&lt;p&gt;Websites with good vertical rhythm are more aesthetically pleasing and generally feel more consistent. While understanding vertical rhythm rules is simple, maintaing it on bigger websites becomes challenging. But challenges are fun, aren’t they? Read on!&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__6_msthpg&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__6_msthpg 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__6_msthpg 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__6_msthpg 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__6_msthpg 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__6_msthpg 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__6_msthpg 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;/figure&gt; &lt;section class=&quot;box&quot;&gt; &lt;p&gt;This article is a part of the &lt;i&gt;Building a simple company website the Hard Way&lt;/i&gt; series.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;a href=&quot;/blog/2018/09/03/building-a-simple-company-website-the-hard-way-typography-intro/&quot;&gt;Typography introduction&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Vertical rhythm&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;/blog/2019/04/08/building-a-simple-company-website-the-hard-way-service-workers/&quot;&gt;Service workers&lt;/a&gt;&lt;/li&gt; &lt;/ol&gt; &lt;/section&gt; &lt;h2 id=&quot;vertical-rhythm&quot;&gt;Vertical rhythm?&lt;/h2&gt; &lt;p&gt;Let’s start with a little bit of theory first. What exactly is &lt;em&gt;vertical rhythm&lt;/em&gt;? Simply said, it describes combination of two properties of written text:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;a line height&lt;/li&gt; &lt;li&gt;element spacings (think margins and paddings)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;By mixing up these properties you can either end up with a page that looks chaotic or—when you’re careful—with website that feels natural and pleasing. To get a grasp of the principle, consider these two designs:&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__1_yjlap0&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__1_yjlap0 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__1_yjlap0 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__1_yjlap0 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__1_yjlap0 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__1_yjlap0 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__1_yjlap0 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;The Good, the Bad and the Ugly.&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;Even without the baseline grid attached you would probably say that the one on the left just feels right: it’s easier to read, more balanced and it generally looks more professional. While the one on the right feels rather awkward. Good rhythm inherently brings this feel of natural flow and—similarly to how music rhythm works—improves readability and the looks of the text. Even if you are not a musician, you would probably notice when the rhythm is erratic. The same applies to written text. This principle relates to how our brains work, the key word here is &lt;a href=&quot;https://en.wikipedia.org/wiki/Pattern_recognition_(psychology)&quot;&gt;pattern recognition&lt;/a&gt;.&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile &quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__3_ex0yyd&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__3_ex0yyd 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__3_ex0yyd 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__3_ex0yyd 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__3_ex0yyd 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__3_ex0yyd 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__3_ex0yyd 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;Vertical rhythm is somewhat similar to rhythm in music.&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;When there is a pattern (&lt;em&gt;~rhythm&lt;/em&gt;), the brain has less work to decode the message. When the pattern lacks, text is more difficult (and exhausing) to read. And from the &lt;a href=&quot;/blog/2018/09/03/building-a-simple-company-website-the-hard-way-typography-intro/&quot;&gt;previous series part&lt;/a&gt; we know this is &lt;em&gt;dangerous&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;Good. Now we know rhythm is imporant. The big question is: &lt;em&gt;how do we maintain it&lt;/em&gt;? Surprisingly, there are only two basic rules: &lt;em&gt;multiples of line height&lt;/em&gt; and &lt;em&gt;consistency&lt;/em&gt;.&lt;/p&gt; &lt;h3 id=&quot;multiples-of-line-height&quot;&gt;Multiples of line height&lt;/h3&gt; &lt;p&gt;The core principle behind good vertical rhythm is quite simple: choose appropriate line height and use it as the grid unit. Keep all the spacings between elements on the page as &lt;em&gt;multiples of it&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;A common practice is to &lt;em&gt;set the line height to 120–150% of the font size&lt;/em&gt;. This means it all starts with the font size selection. Many people choose &lt;em&gt;16px as base&lt;/em&gt;, because browsers use this as the default value, but you are free to choose whatever you like. We chose 18px for this site. Once you’ve decided about the base font size, decide about the line height. Most of the time, 150% of font size works well and we did the same on this site. Line height is set to 27px (18px × 1.5).&lt;/p&gt; &lt;p&gt;Then, when designing the site, keep in mind this simple rule:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Element spacing shall be kept as multiples of your line height.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;For example, if your line height is 24px, you would set your spacings to 48px (2 × 24), 72px (3 × 24), 96px (4 × 24) and so on. You could also use 12px as it’s 0.5 × 24. All the multiples are OK as long as you don’t create dozens of combinations and keep things simple and &lt;em&gt;consistent&lt;/em&gt;.&lt;/p&gt; &lt;h3 id=&quot;consistency&quot;&gt;Consistency&lt;/h3&gt; &lt;p&gt;Consistency is important beacuse it simplifies orientation and greatly contributes to a natural rhythmic feel of the text. Having the spacings properly sized but inconsistent would not make the reading any simpler for the reader. Taking inspiration from the music again, most songs have verses that repeat throughout the song in consistent matter.&lt;/p&gt; &lt;p&gt;Keeping things consistent means estabilishing some rules upfront. This is up to you, there are no strict rules. A good way to do it is to think &lt;em&gt;semantically&lt;/em&gt; about the elements. Allow bigger space when the reader should realize context changed. Use smaller space when just dividing paragraphs. Let the text speak for itself.&lt;/p&gt; &lt;h2 id=&quot;challenges-on-the-horizon&quot;&gt;Challenges on the horizon&lt;/h2&gt; &lt;p&gt;As you can probably imagine, the math can quicky get tedious when your website grows. I definitely recommend using a CSS preprocessor such as &lt;a href=&quot;https://sass-lang.com/&quot;&gt;SASS&lt;/a&gt; and defining your grid size globally. This then allows you to write the grid unit either as a &lt;em&gt;variable&lt;/em&gt;:&lt;/p&gt; &lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$base-font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* ~1rem */&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$grid-unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$base-font-size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* ~1.5rem */&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* a rule */&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$grid-unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;or as a &lt;em&gt;function&lt;/em&gt;:&lt;/p&gt; &lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$base-font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;@function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;gu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$multiplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;@return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$base-font-size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$multiplier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* a rule */&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;gu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;the-baseline-problem&quot;&gt;The baseline problem&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;baseline&lt;/em&gt; is the invisible line on which most letters sit. The following figure demonstrates it quite well:&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/2018-09-03-building-a-simple-company-website-the-hard-way-typography__4_jal5ik&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-09-03-building-a-simple-company-website-the-hard-way-typography__4_jal5ik 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-09-03-building-a-simple-company-website-the-hard-way-typography__4_jal5ik 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-09-03-building-a-simple-company-website-the-hard-way-typography__4_jal5ik 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-09-03-building-a-simple-company-website-the-hard-way-typography__4_jal5ik 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-09-03-building-a-simple-company-website-the-hard-way-typography__4_jal5ik 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-09-03-building-a-simple-company-website-the-hard-way-typography__4_jal5ik 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;Baseline, line-height, font-size and cap height explained, author: &lt;a href=&quot;https://medium.com/@razvanonofrei/aligning-type-to-baseline-the-right-way-using-sass-e258fce47a9b&quot;&gt;Razvan Onofrei&lt;/a&gt;&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;The space between individual baselines then forms the baseline grid and we know this distance is our grid unit, the size of our line height. Go on and toggle the baseline grid on this website by clicking &lt;a href=&quot;#&quot; onclick=&quot;window.toggleGrid(); return false;&quot;&gt;here&lt;/a&gt;. See how all the lines sit nicely on it?&lt;/p&gt; &lt;p&gt;When working on you vertical rhythm rules, you will quickly find out that achieving the looks of the introductory image (where each text line is nicely put on the baseline) is not as simple as merely expressing your spacings as multiples of line height.&lt;/p&gt; &lt;p&gt;The reason for that is that web browsers &lt;em&gt;in fact do not recognize the concept of baseline&lt;/em&gt;. Instead, text is put approximately in the middle of the line height (see the image above again for the reference).&lt;/p&gt; &lt;p&gt;This gets problematic when you want to use your baseline for element arrangment. Often, you want to arrange your boxes to match the baseline. This is especially true for multi–column content.&lt;/p&gt; &lt;p&gt;So, we need to deal with this somehow. For long, people thought baseline alignment was not possible in CSS. It turns out that—with some SASS dark magic—it’s doable. In order to acheive the desired effect we need to &lt;em&gt;shift every text&lt;/em&gt; downwards by a specific amount it needs to fit nicely on the baseline. Your initial thought might be:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Subtract font-size from line-height, divide that by two and shift the text down by that difference.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Kinda, but not quite. It turns out that what you really need to deal with is not the &lt;em&gt;font-size&lt;/em&gt;, but the &lt;em&gt;cap height&lt;/em&gt; of each font. Unfortunately, it’s not straightforward to get the cap height value. If you’re lucky enough, you can google it. If not, you will need to either measure it or try and guess until you see it fits.&lt;/p&gt; &lt;p&gt;Assuming you have &lt;code class=&quot;highlighter-rouge&quot;&gt;$line-height&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;$font-size&lt;/code&gt; in pixels and &lt;code class=&quot;highlighter-rouge&quot;&gt;$cap-height&lt;/code&gt; as ratio of font size (e.g. 0.79 means 79% of the font size is the actual cap height), following formula can be used:&lt;/p&gt; &lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line-height&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$font-size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cap-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;Make sure to use the above image for the reference on the formula.&lt;/p&gt; &lt;p&gt;Once we have the shift, we need to move our text downwards on the baseline. We can do that easily by adding &lt;code class=&quot;highlighter-rouge&quot;&gt;padding-top&lt;/code&gt;. Unfortunately, this has a side-effect: it pushes the elements below the one in question, too. In order to compensate, we need to set the same value multiplied by –1 as our &lt;code class=&quot;highlighter-rouge&quot;&gt;margin-bottom&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you’re interested in details of the algorithm, please look at the &lt;a href=&quot;https://medium.com/@razvanonofrei/aligning-type-to-baseline-the-right-way-using-sass-e258fce47a9b&quot;&gt;blog post&lt;/a&gt; from the original inventor of the technique, Razvan Onofrei.&lt;/p&gt; &lt;p&gt;In order to use this globally, we’ll need some help with the math. This is where SASS enters the game. Let’s create some mixins for it. Take a look at the following example (a stripped down version of one of our mixins):&lt;/p&gt; &lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Base font size, equals to 1rem.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rootsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// One grid unit.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$grid-unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.5rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ~ 24px&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Information about the font.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$font&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cap-height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.75&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;'Andulka Text Pro', Georgia, Palatino, serif&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;@function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;gu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$multiplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;@return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$grid-unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Assumes $size and $lineheight are passed in pixels.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;@mixin&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;baseline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lineheight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$size-rems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;strip-unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rootsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$capheight-rems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$size-rems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map-get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$font&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cap-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$lh-rems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;strip-unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lineheight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rootsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lh-rems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$capheight-rems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map-get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$font&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$size-rems&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;padding-top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$shift&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$shift&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lh-rems&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;There are frameworks, too. You can use &lt;a href=&quot;https://sassline.com/&quot;&gt;sassline&lt;/a&gt; from the Razvan Onofrei (original author of the idea) or &lt;a href=&quot;https://jamonserrano.github.io/plumber-sass/&quot;&gt;plumber&lt;/a&gt; that implements this as a nice SASS library.&lt;/p&gt; &lt;p&gt;We originally tried Sassline but quickly realized it’s too restrictive and we didn’t really like all the rules it had introduced. So we decided to write our bunch of mixins to get the job done.&lt;/p&gt; &lt;h3 id=&quot;the-restrictive-line-height-problem&quot;&gt;The restrictive line-height problem&lt;/h3&gt; &lt;p&gt;This is best demonstrated by an example:&lt;/p&gt; &lt;figure class=&quot;figure content-block__cover--mobile figure--wide&quot;&gt; &lt;img src=&quot;https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto,dpr_2.0/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__2_hri4a5&quot; srcset=&quot;https://res.cloudinary.com/fragaria/image/upload/w_480,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__2_hri4a5 480w, https://res.cloudinary.com/fragaria/image/upload/w_640,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__2_hri4a5 640w, https://res.cloudinary.com/fragaria/image/upload/w_1290,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__2_hri4a5 1290w, https://res.cloudinary.com/fragaria/image/upload/w_1920,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__2_hri4a5 1920w, https://res.cloudinary.com/fragaria/image/upload/w_1120,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__2_hri4a5 1120w, https://res.cloudinary.com/fragaria/image/upload/w_2240,c_limit,f_auto,q_auto/fragaria.cz/posts/2018-11-12-building-a-simple-company-website-the-hard-way-vertical-rythm__2_hri4a5 2240w,&quot; class=&quot;figure__image js-fix-baseline&quot; /&gt; &lt;figcaption class=&quot;figure__caption&quot;&gt;Line-height in direct multiples of grid unit is too restrictive sometimes. In this case on headings.&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;As you can see on the image, headings on these two examples have different line height. The example on the left—albeit breaking the baseline grid—looks better (and reads better, too!). Well, I’ve not been totally honest with you:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Breaking the grid is OK and generally recommended if the readability should suffer otherwise.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;This rule has a sibling:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;When you break the baseline grid, make sure to join it again as soon as possible.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Example image shows this well. The grid pace is restored once the heading has been dealt with.&lt;/p&gt; &lt;p&gt;Even though rules are simple, implmentation is not. The reason for that is that the margin compensation depends on &lt;em&gt;how many lines the heading spans&lt;/em&gt;. Looking at the picture it’s obvious that the margin compensation will be different if the heading takes one line, two lines and so on. When we’re off the grid, we’re simply off.&lt;/p&gt; &lt;p&gt;Therefore, some static SASS code won’t suffice. We’ll have to use something with more dynamic nature: JavaScript. We ought to calculate the margin compensation based on the actual height of the block element. Ultimately, we need to round the total element height to &lt;em&gt;nearest grid unit&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;See the example code:&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// How many rem units is our line-height.&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;guRems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// How many pixels is 1rem.&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;remSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getComputedStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;documentElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fontSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Size of 1 grid unit in pixels.&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gridUnitSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;remSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;guRems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixBaseline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elemStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getComputedStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Actual element height *without* the margin.&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elemBoundingHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getBoundingClientRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Current margin of the element in px.&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elemBottomMargin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elemStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;marginBottom&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elemStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;marginBottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Total height of the element in px.&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elemHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elemBoundingHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elemBottomMargin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elemHeightInGu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elemHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gridUnitSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;marginBottomInGu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elemBottomMargin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gridUnitSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Height difference to nearest grid unit.&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;heightDecimalPartInGu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elemHeightInGu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Compensated margin.&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newMarginInGu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;heightDecimalPartInGu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;heightDecimalPartInGu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;marginBottomInGu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;marginBottomInGu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;heightDecimalPartInGu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Set the new margin (keep rems).&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;marginBottom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newMarginInGu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;guRems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;p&gt;It’s quite straightforward. When dealing with the difference to the nearest grid unit, we either round up or down depending on what is closer. You might end up favoring one or the other. This can be easily adjusted by changing the &lt;code class=&quot;highlighter-rouge&quot;&gt;0.5&lt;/code&gt; to something else (in 0–1 range).&lt;/p&gt; &lt;p&gt;Applying this function to our elements (ones that are set to have line height other than integer multiple of grid unit) then turns out to be easy:&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;h1, h2, h3, .something-else-that-needs-fixing&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;forEachNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nodelist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nodelist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nodelist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;forEachNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fixBaseline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt; &lt;p&gt;We’ve covered some ideas on vertical rhythm. As we’ve found out, browser rendering engines unfortunately lack support for proper typography. We’ve described few tips on how to work around it ourselves. Let’s hope the rendering engines will improve at some point in future. Until then, we have two options:&lt;/p&gt; &lt;p&gt;a) Ignore the baseline troubles and focus just on the basics&lt;br /&gt; b) Put significant effort to make your website stand out&lt;/p&gt; &lt;p&gt;Since you’ve read all the way down to conclusion, I bet you might like the option two a bit more.&lt;/p&gt; &lt;p&gt;And in case you enjoyed the article, stay tuned for the next part of &lt;em&gt;Building a simple company website the Hard Way&lt;/em&gt; series. We’ll shed some light on &lt;a href=&quot;/blog/2019/04/08/building-a-simple-company-website-the-hard-way-service-workers/&quot;&gt;Service workers&lt;/a&gt;.&lt;/p&gt;</content><author><name>Filip Vařecha</name></author><category term="typography"/><category term="vertical rhythm"/><category term="baseline"/><category term="sass"/><category term="css"/><category term="fonts"/><summary type="html">Websites with good vertical rhythm are more aesthetically pleasing and generally feel more consistent. While understanding vertical rhythm rules is simple, maintaing it on bigger websites becomes challenging. But challenges are fun, aren’t they? Read on!</summary></entry></feed>